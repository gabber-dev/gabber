/**
 * Copyright 2025 Fluently AI, Inc. DBA Gabber. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Type = "request";
export type ReqId = string;
/**
 * Request to push data to a pad
 */
export type Payload = RuntimeRequestPayload_PushValue | RuntimeRequestPayload_GetValue;
export type Type1 = "push_value";
export type Type2 = "get_value";
export type Type3 = "event";
/**
 * Payload for the runtime event
 */
export type Payload1 = RuntimeEventPayload_Value;
export type Type4 = "value";
/**
 * Type of the pad triggered value
 */
export type Value1 =
  | PadTriggeredValue_String
  | PadTriggeredValue_Integer
  | PadTriggeredValue_Float
  | PadTriggeredValue_Boolean
  | PadTriggeredValue_Trigger
  | PadTriggeredValue_AudioClip
  | PadTriggeredValue_VideoClip;
export type Type5 = "string";
export type Value2 = string;
export type Type6 = "integer";
export type Value3 = number;
export type Type7 = "float";
export type Value4 = number;
export type Type8 = "boolean";
export type Value5 = boolean;
export type Type9 = "trigger";
export type Type10 = "audio_clip";
export type Transcript = string;
export type Duration = number;
export type Type11 = "video_clip";
export type Duration1 = number;
export type Type12 = "ack";
export type ReqId1 = string;
export type Type13 = "complete";
export type ReqId2 = string;
export type Error = string | null;
export type Payload2 = (RuntimeResponsePayload_PushValue | RuntimeResponsePayload_GetValue) | null;
export type Type14 = "push_value";
export type Type15 = "get_value";

export interface RuntimeRequest {
  type?: Type;
  req_id: ReqId;
  payload: Payload;
  [k: string]: unknown;
}
export interface RuntimeRequestPayload_PushValue {
  type?: Type1;
  value?: Value;
  [k: string]: unknown;
}
export interface Value {
  [k: string]: unknown;
}
export interface RuntimeRequestPayload_GetValue {
  type?: Type2;
  [k: string]: unknown;
}
export interface RuntimeEvent {
  type?: Type3;
  payload: Payload1;
  [k: string]: unknown;
}
export interface RuntimeEventPayload_Value {
  type?: Type4;
  value: Value1;
  [k: string]: unknown;
}
export interface PadTriggeredValue_String {
  type?: Type5;
  value: Value2;
  [k: string]: unknown;
}
export interface PadTriggeredValue_Integer {
  type?: Type6;
  value: Value3;
  [k: string]: unknown;
}
export interface PadTriggeredValue_Float {
  type?: Type7;
  value: Value4;
  [k: string]: unknown;
}
export interface PadTriggeredValue_Boolean {
  type?: Type8;
  value: Value5;
  [k: string]: unknown;
}
export interface PadTriggeredValue_Trigger {
  type?: Type9;
  [k: string]: unknown;
}
export interface PadTriggeredValue_AudioClip {
  type?: Type10;
  transcript: Transcript;
  duration: Duration;
  [k: string]: unknown;
}
export interface PadTriggeredValue_VideoClip {
  type?: Type11;
  duration: Duration1;
  [k: string]: unknown;
}
export interface RuntimeRequestAck {
  type?: Type12;
  req_id: ReqId1;
  [k: string]: unknown;
}
export interface RuntimeResponse {
  type?: Type13;
  req_id: ReqId2;
  error?: Error;
  payload?: Payload2;
  [k: string]: unknown;
}
export interface RuntimeResponsePayload_PushValue {
  type?: Type14;
  [k: string]: unknown;
}
export interface RuntimeResponsePayload_GetValue {
  type?: Type15;
  value?: unknown;
  [k: string]: unknown;
}
