/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Request to perform on the graph editor
 */
export type Request =
  | SaveSubgraphRequest
  | SaveAppRequest
  | CreateAppRunRequest
  | DebugConnectionRequest
  | ImportAppRequest
  | MCPProxyConnectionRequest;
export type Type = "save_subgraph";
export type Id = string | null;
export type Name = string;
export type Id1 = string;
export type Type1 = string;
export type EditorName = string;
/**
 * @minItems 2
 * @maxItems 2
 */
export type EditorPosition = [unknown, unknown];
export type EditorDimensions = [unknown, unknown] | null;
export type Id2 = string;
export type Group = string;
export type Type2 = string;
export type DefaultAllowedTypes =
  | (
      | String
      | Integer
      | Float
      | Boolean
      | Enum
      | Secret
      | BoundingBox
      | Point
      | Audio
      | Video
      | Trigger
      | AudioClip
      | VideoClip
      | AVClip
      | TextStream
      | ContextMessage
      | ContextMessageRole
      | List
      | Schema
      | Object
      | NodeReference
    )[]
  | null;
export type Type3 = "string";
export type MaxLength = number | null;
export type MinLength = number | null;
export type Type4 = "integer";
export type Maximum = number | null;
export type Minimum = number | null;
export type Type5 = "float";
export type Maximum1 = number | null;
export type Minimum1 = number | null;
export type Type6 = "boolean";
export type Type7 = "enum";
export type Options = string[] | null;
export type Type8 = "secret";
export type UpdatedAt = string;
export type CreatedAt = string;
export type Id3 = string;
export type Name1 = string;
export type Options1 = PublicSecret[];
export type Type9 = "bounding_box";
export type Type10 = "point";
export type Type11 = "audio";
export type Type12 = "video";
export type Type13 = "trigger";
export type Type14 = "audio_clip";
export type Type15 = "video_clip";
export type Type16 = "av_clip";
export type Type17 = "text_stream";
export type Type18 = "context_message";
export type Type19 = "context_message_role";
export type Type20 = "list";
export type MaxLength1 = number | null;
export type ItemTypeConstraints = BasePadType[] | null;
export type Type21 = "schema";
export type Type22 = "object";
export type ObjectSchema = {
  [k: string]: unknown;
} | null;
export type Type23 = "node_reference";
export type NodeTypes = string[];
export type AllowedTypes =
  | (
      | String
      | Integer
      | Float
      | Boolean
      | Enum
      | Secret
      | BoundingBox
      | Point
      | Audio
      | Video
      | Trigger
      | AudioClip
      | VideoClip
      | AVClip
      | TextStream
      | ContextMessage
      | ContextMessageRole
      | List
      | Schema
      | Object
      | NodeReference
    )[]
  | null;
export type Node = string;
export type Pad = string;
export type NextPads = PadReference[];
export type PadLinks = string[];
export type Pads = PadEditorRepresentation[];
export type Description = string | null;
export type Primary = string;
export type Secondary = string;
export type Tags = string[];
export type Notes = NodeNote[] | null;
export type Level = "info" | "warning" | "error";
export type Message = string;
export type Pad1 = string | null;
export type Recommendations = NodeNoteRecommendation[] | null;
export type Message1 = string;
export type Edits =
  | (
      | InsertNodeEdit
      | InsertSubGraphEdit
      | UpdateNodeEdit
      | RemoveNodeEdit
      | ConnectPadEdit
      | DisconnectPadEdit
      | UpdatePadEdit
      | CreatePortalEdit
      | CreatePortalEndEdit
      | DeletePortalEdit
      | DeletePortalEndEdit
      | UpdatePortalEdit
      | UpdatePortalEndEdit
    )[]
  | null;
export type Type24 = "insert_node";
export type Id4 = string | null;
export type NodeType = string;
/**
 * @minItems 2
 * @maxItems 2
 */
export type EditorPosition1 = [unknown, unknown];
export type EditorDimensions1 = [unknown, unknown] | null;
export type EditorName1 = string;
export type Type25 = "insert_sub_graph";
export type Id5 = string | null;
export type SubgraphId = string;
/**
 * @minItems 2
 * @maxItems 2
 */
export type EditorPosition2 = [unknown, unknown];
export type EditorDimensions2 = [unknown, unknown] | null;
export type EditorName2 = string;
export type Type26 = "update_node";
export type Id6 = string;
export type EditorPosition3 = [unknown, unknown] | null;
export type EditorDimensions3 = [unknown, unknown] | null;
export type EditorName3 = string | null;
export type NewId = string | null;
export type Type27 = "remove_node";
/**
 * ID of the node to remove
 */
export type NodeId = string;
export type Type28 = "connect_pad";
/**
 * ID of the source node
 */
export type Node1 = string;
/**
 * Handle ID of the source pad
 */
export type Pad2 = string;
/**
 * ID of the target node
 */
export type ConnectedNode = string;
/**
 * Handle ID of the target pad
 */
export type ConnectedPad = string;
export type Type29 = "disconnect_pad";
/**
 * ID of the source node
 */
export type Node2 = string;
/**
 * Handle ID of the source pad
 */
export type Pad3 = string;
/**
 * ID of the target node
 */
export type ConnectedNode1 = string;
/**
 * Handle ID of the target pad
 */
export type ConnectedPad1 = string;
export type Type30 = "update_pad";
/**
 * ID of the node containing the pad
 */
export type Node3 = string;
/**
 * ID of the pad to update
 */
export type Pad4 = string;
export type Type31 = "create_portal";
export type SourceNode = string;
export type SourcePad = string;
/**
 * @minItems 2
 * @maxItems 2
 */
export type EditorPosition4 = [unknown, unknown];
export type Type32 = "create_portal_end";
export type PortalId = string;
/**
 * @minItems 2
 * @maxItems 2
 */
export type EditorPosition5 = [unknown, unknown];
export type Type33 = "delete_portal";
export type PortalId1 = string;
export type Type34 = "delete_portal_end";
export type PortalId2 = string;
export type PortalEndId = string;
export type Type35 = "update_portal";
export type PortalId3 = string;
/**
 * @minItems 2
 * @maxItems 2
 */
export type EditorPosition6 = [unknown, unknown];
export type Type36 = "update_portal_end";
export type PortalId4 = string;
export type PortalEndId1 = string;
/**
 * @minItems 2
 * @maxItems 2
 */
export type EditorPosition7 = [unknown, unknown];
export type NextPads1 = PadReference[];
export type Nodes = NodeEditorRepresentation[];
export type Portals = Portal[] | null;
export type Id7 = string;
export type Name2 = string;
export type SourceNode1 = string;
export type SourcePad1 = string;
/**
 * @minItems 2
 * @maxItems 2
 */
export type EditorPosition8 = [unknown, unknown];
export type Id8 = string;
/**
 * @minItems 2
 * @maxItems 2
 */
export type EditorPosition9 = [unknown, unknown];
export type NextPads2 = PadReference[];
export type Ends = PortalEnd[];
export type Type37 = "save_app";
export type Id9 = string | null;
export type Name3 = string;
export type Type38 = "create_app_run";
export type RunId = string;
export type Type39 = "create_debug_connection";
export type RunId1 = string;
export type Type40 = "import_app";
export type Id10 = string;
export type Name4 = string;
export type CreatedAt1 = string;
export type UpdatedAt1 = string;
export type Id11 = string;
export type Name5 = string;
export type CreatedAt2 = string;
export type UpdatedAt2 = string;
export type Subgraphs = RepositorySubGraph[];
export type Type41 = "mcp_proxy_connection";
export type RunId2 = string;
/**
 * Response from the graph editor
 */
export type Response =
  | SaveSubgraphResponse
  | SaveAppResponse
  | ListAppsResponse
  | GetAppResponse
  | GetSubgraphResponse
  | ListSubgraphsResponse
  | CreateAppRunResponse
  | DebugConnectionResponse
  | ImportAppResponse
  | ExportAppResponse
  | MCPProxyConnectionResponse;
export type Type42 = "save_subgraph";
export type Type43 = "save_app";
export type Type44 = "list_apps";
export type Apps = RepositoryApp[];
export type Type45 = "get_app";
export type Type46 = "get_subgraph";
export type Type47 = "list_subgraphs";
export type SubGraphs = RepositorySubGraph[];
export type Type48 = "create_app_run";
export type Url = string;
export type Token = string;
export type Type49 = "debug_connection";
export type Type50 = "import_app";
export type Type51 = "export_app";
export type Type52 = "mcp_proxy_connection";

export interface SaveSubgraphRequest {
  type?: Type;
  id?: Id;
  name: Name;
  graph: GraphEditorRepresentation;
  [k: string]: unknown;
}
export interface GraphEditorRepresentation {
  nodes: Nodes;
  portals?: Portals;
  [k: string]: unknown;
}
export interface NodeEditorRepresentation {
  id: Id1;
  type: Type1;
  editor_name: EditorName;
  editor_position: EditorPosition;
  editor_dimensions?: EditorDimensions;
  pads: Pads;
  description?: Description;
  metadata: NodeMetadata;
  notes?: Notes;
  [k: string]: unknown;
}
export interface PadEditorRepresentation {
  id: Id2;
  group: Group;
  type: Type2;
  default_allowed_types?: DefaultAllowedTypes;
  allowed_types?: AllowedTypes;
  value?: unknown;
  next_pads: NextPads;
  previous_pad?: PadReference | null;
  pad_links?: PadLinks;
  [k: string]: unknown;
}
export interface String {
  type?: Type3;
  max_length?: MaxLength;
  min_length?: MinLength;
  [k: string]: unknown;
}
export interface Integer {
  type?: Type4;
  maximum?: Maximum;
  minimum?: Minimum;
  [k: string]: unknown;
}
export interface Float {
  type?: Type5;
  maximum?: Maximum1;
  minimum?: Minimum1;
  [k: string]: unknown;
}
export interface Boolean {
  type?: Type6;
  [k: string]: unknown;
}
export interface Enum {
  type?: Type7;
  options?: Options;
  [k: string]: unknown;
}
export interface Secret {
  type?: Type8;
  options?: Options1;
  [k: string]: unknown;
}
export interface PublicSecret {
  updated_at: UpdatedAt;
  created_at: CreatedAt;
  id: Id3;
  name: Name1;
  [k: string]: unknown;
}
export interface BoundingBox {
  type?: Type9;
  [k: string]: unknown;
}
export interface Point {
  type?: Type10;
  [k: string]: unknown;
}
export interface Audio {
  type?: Type11;
  [k: string]: unknown;
}
export interface Video {
  type?: Type12;
  [k: string]: unknown;
}
export interface Trigger {
  type?: Type13;
  [k: string]: unknown;
}
export interface AudioClip {
  type?: Type14;
  [k: string]: unknown;
}
export interface VideoClip {
  type?: Type15;
  [k: string]: unknown;
}
export interface AVClip {
  type?: Type16;
  [k: string]: unknown;
}
export interface TextStream {
  type?: Type17;
  [k: string]: unknown;
}
export interface ContextMessage {
  type?: Type18;
  [k: string]: unknown;
}
export interface ContextMessageRole {
  type?: Type19;
  [k: string]: unknown;
}
export interface List {
  type?: Type20;
  max_length?: MaxLength1;
  item_type_constraints: ItemTypeConstraints;
  [k: string]: unknown;
}
export interface BasePadType {
  [k: string]: unknown;
}
export interface Schema {
  type?: Type21;
  [k: string]: unknown;
}
export interface Object {
  type?: Type22;
  object_schema?: ObjectSchema;
  [k: string]: unknown;
}
export interface NodeReference {
  type?: Type23;
  node_types: NodeTypes;
  [k: string]: unknown;
}
export interface PadReference {
  node: Node;
  pad: Pad;
  [k: string]: unknown;
}
export interface NodeMetadata {
  primary: Primary;
  secondary: Secondary;
  tags?: Tags;
  [k: string]: unknown;
}
export interface NodeNote {
  level: Level;
  message: Message;
  pad?: Pad1;
  recommendations?: Recommendations;
  [k: string]: unknown;
}
export interface NodeNoteRecommendation {
  message: Message1;
  edits?: Edits;
  [k: string]: unknown;
}
export interface InsertNodeEdit {
  type?: Type24;
  id?: Id4;
  node_type: NodeType;
  editor_position: EditorPosition1;
  editor_dimensions?: EditorDimensions1;
  editor_name: EditorName1;
  [k: string]: unknown;
}
export interface InsertSubGraphEdit {
  type?: Type25;
  id?: Id5;
  subgraph_id: SubgraphId;
  editor_position: EditorPosition2;
  editor_dimensions?: EditorDimensions2;
  editor_name: EditorName2;
  [k: string]: unknown;
}
export interface UpdateNodeEdit {
  type?: Type26;
  id: Id6;
  editor_position: EditorPosition3;
  editor_dimensions: EditorDimensions3;
  editor_name: EditorName3;
  new_id?: NewId;
  [k: string]: unknown;
}
export interface RemoveNodeEdit {
  type?: Type27;
  node_id: NodeId;
  [k: string]: unknown;
}
export interface ConnectPadEdit {
  type?: Type28;
  node: Node1;
  pad: Pad2;
  connected_node: ConnectedNode;
  connected_pad: ConnectedPad;
  [k: string]: unknown;
}
export interface DisconnectPadEdit {
  type?: Type29;
  node: Node2;
  pad: Pad3;
  connected_node: ConnectedNode1;
  connected_pad: ConnectedPad1;
  [k: string]: unknown;
}
export interface UpdatePadEdit {
  type?: Type30;
  node: Node3;
  pad: Pad4;
  value: Value1;
  [k: string]: unknown;
}
/**
 * New value for the pad
 */
export interface Value1 {
  [k: string]: unknown;
}
export interface CreatePortalEdit {
  type?: Type31;
  source_node: SourceNode;
  source_pad: SourcePad;
  editor_position: EditorPosition4;
  [k: string]: unknown;
}
export interface CreatePortalEndEdit {
  type?: Type32;
  portal_id: PortalId;
  editor_position: EditorPosition5;
  [k: string]: unknown;
}
export interface DeletePortalEdit {
  type?: Type33;
  portal_id: PortalId1;
  [k: string]: unknown;
}
export interface DeletePortalEndEdit {
  type?: Type34;
  portal_id: PortalId2;
  portal_end_id: PortalEndId;
  [k: string]: unknown;
}
export interface UpdatePortalEdit {
  type?: Type35;
  portal_id: PortalId3;
  editor_position: EditorPosition6;
  [k: string]: unknown;
}
export interface UpdatePortalEndEdit {
  type?: Type36;
  portal_id: PortalId4;
  portal_end_id: PortalEndId1;
  editor_position: EditorPosition7;
  next_pads: NextPads1;
  [k: string]: unknown;
}
export interface Portal {
  id: Id7;
  name: Name2;
  source_node: SourceNode1;
  source_pad: SourcePad1;
  editor_position: EditorPosition8;
  ends?: Ends;
  [k: string]: unknown;
}
export interface PortalEnd {
  id: Id8;
  editor_position: EditorPosition9;
  next_pads: NextPads2;
  [k: string]: unknown;
}
export interface SaveAppRequest {
  type?: Type37;
  id?: Id9;
  name: Name3;
  graph: GraphEditorRepresentation;
  [k: string]: unknown;
}
export interface CreateAppRunRequest {
  type?: Type38;
  run_id: RunId;
  graph: GraphEditorRepresentation;
  [k: string]: unknown;
}
export interface DebugConnectionRequest {
  type?: Type39;
  run_id: RunId1;
  [k: string]: unknown;
}
export interface ImportAppRequest {
  type?: Type40;
  export: AppExport;
  [k: string]: unknown;
}
export interface AppExport {
  app: RepositoryApp;
  subgraphs: Subgraphs;
  [k: string]: unknown;
}
export interface RepositoryApp {
  id: Id10;
  name: Name4;
  created_at: CreatedAt1;
  updated_at: UpdatedAt1;
  graph: GraphEditorRepresentation;
  [k: string]: unknown;
}
export interface RepositorySubGraph {
  id: Id11;
  name: Name5;
  created_at: CreatedAt2;
  updated_at: UpdatedAt2;
  graph: GraphEditorRepresentation;
  [k: string]: unknown;
}
export interface MCPProxyConnectionRequest {
  type?: Type41;
  run_id: RunId2;
  [k: string]: unknown;
}
export interface SaveSubgraphResponse {
  type?: Type42;
  sub_graph: RepositorySubGraph;
  [k: string]: unknown;
}
export interface SaveAppResponse {
  type?: Type43;
  app: RepositoryApp;
  [k: string]: unknown;
}
export interface ListAppsResponse {
  type?: Type44;
  apps: Apps;
  [k: string]: unknown;
}
export interface GetAppResponse {
  type?: Type45;
  app: RepositoryApp;
  [k: string]: unknown;
}
export interface GetSubgraphResponse {
  type?: Type46;
  sub_graph: RepositorySubGraph;
  [k: string]: unknown;
}
export interface ListSubgraphsResponse {
  type?: Type47;
  sub_graphs: SubGraphs;
  [k: string]: unknown;
}
export interface CreateAppRunResponse {
  type?: Type48;
  connection_details: AppRunConnectionDetails;
  [k: string]: unknown;
}
export interface AppRunConnectionDetails {
  url: Url;
  token: Token;
  [k: string]: unknown;
}
export interface DebugConnectionResponse {
  type?: Type49;
  connection_details: AppRunConnectionDetails;
  graph: GraphEditorRepresentation;
  [k: string]: unknown;
}
export interface ImportAppResponse {
  type?: Type50;
  [k: string]: unknown;
}
export interface ExportAppResponse {
  type?: Type51;
  export: AppExport;
  [k: string]: unknown;
}
export interface MCPProxyConnectionResponse {
  type?: Type52;
  connection_details: AppRunConnectionDetails;
  [k: string]: unknown;
}
